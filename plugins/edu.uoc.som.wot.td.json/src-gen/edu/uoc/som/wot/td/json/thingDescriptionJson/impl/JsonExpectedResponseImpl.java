/**
 * generated by Xtext 2.17.0
 */
package edu.uoc.som.wot.td.json.thingDescriptionJson.impl;

import edu.uoc.som.wot.td.json.thingDescriptionJson.JsonExpectedResponse;
import edu.uoc.som.wot.td.json.thingDescriptionJson.ThingDescriptionJsonPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Json Expected Response</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link edu.uoc.som.wot.td.json.thingDescriptionJson.impl.JsonExpectedResponseImpl#getContentType <em>Content Type</em>}</li>
 * </ul>
 *
 * @generated
 */
public class JsonExpectedResponseImpl extends MinimalEObjectImpl.Container implements JsonExpectedResponse
{
  /**
   * The default value of the '{@link #getContentType() <em>Content Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContentType()
   * @generated
   * @ordered
   */
  protected static final String CONTENT_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getContentType() <em>Content Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContentType()
   * @generated
   * @ordered
   */
  protected String contentType = CONTENT_TYPE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected JsonExpectedResponseImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ThingDescriptionJsonPackage.Literals.JSON_EXPECTED_RESPONSE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getContentType()
  {
    return contentType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setContentType(String newContentType)
  {
    String oldContentType = contentType;
    contentType = newContentType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ThingDescriptionJsonPackage.JSON_EXPECTED_RESPONSE__CONTENT_TYPE, oldContentType, contentType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ThingDescriptionJsonPackage.JSON_EXPECTED_RESPONSE__CONTENT_TYPE:
        return getContentType();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ThingDescriptionJsonPackage.JSON_EXPECTED_RESPONSE__CONTENT_TYPE:
        setContentType((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ThingDescriptionJsonPackage.JSON_EXPECTED_RESPONSE__CONTENT_TYPE:
        setContentType(CONTENT_TYPE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ThingDescriptionJsonPackage.JSON_EXPECTED_RESPONSE__CONTENT_TYPE:
        return CONTENT_TYPE_EDEFAULT == null ? contentType != null : !CONTENT_TYPE_EDEFAULT.equals(contentType);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (contentType: ");
    result.append(contentType);
    result.append(')');
    return result.toString();
  }

} //JsonExpectedResponseImpl
